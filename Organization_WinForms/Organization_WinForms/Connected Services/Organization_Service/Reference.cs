//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Organization_WinForms.Organization_Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Organization_Service.IService", CallbackContract=typeof(Organization_WinForms.Organization_Service.IServiceCallback))]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OpenSession", ReplyAction="http://tempuri.org/IService/OpenSessionResponse")]
        void OpenSession();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OpenSession", ReplyAction="http://tempuri.org/IService/OpenSessionResponse")]
        System.Threading.Tasks.Task OpenSessionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReceiveData", ReplyAction="http://tempuri.org/IService/ReceiveDataResponse")]
        void ReceiveData(string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ReceiveData", ReplyAction="http://tempuri.org/IService/ReceiveDataResponse")]
        System.Threading.Tasks.Task ReceiveDataAsync(string data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/OnCallback", ReplyAction="http://tempuri.org/IService/OnCallbackResponse")]
        void OnCallback(string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/SendPerson", ReplyAction="http://tempuri.org/IService/SendPersonResponse")]
        void SendPerson(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Organization_WinForms.Organization_Service.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.DuplexClientBase<Organization_WinForms.Organization_Service.IService>, Organization_WinForms.Organization_Service.IService {
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void OpenSession() {
            base.Channel.OpenSession();
        }
        
        public System.Threading.Tasks.Task OpenSessionAsync() {
            return base.Channel.OpenSessionAsync();
        }
        
        public void ReceiveData(string data) {
            base.Channel.ReceiveData(data);
        }
        
        public System.Threading.Tasks.Task ReceiveDataAsync(string data) {
            return base.Channel.ReceiveDataAsync(data);
        }
    }
}
